---
name: üóëÔ∏è Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        type: choice
        options:
          - dev
          - hml
      confirm_destroy:
        description: 'Type "DESTROY" to confirm (case sensitive)'
        required: true
        type: string
      reason:
        description: 'Reason for destroying infrastructure'
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.0

jobs:
  validate-destroy:
    name: ‚ö†Ô∏è Validate Destroy Request
    runs-on: ubuntu-latest
    steps:
      - name: Check Confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
            echo "‚ùå Confirmation failed. You must type 'DESTROY' exactly."
            exit 1
          fi

      - name: Check Environment
        run: |
          if [ "${{ github.event.inputs.environment }}" == "prod" ]; then
            echo "‚ùå Production environment cannot be destroyed via workflow."
            echo "Please contact infrastructure team for production changes."
            exit 1
          fi

      - name: Log Destroy Request
        run: |
          echo "## ‚ö†Ô∏è Infrastructure Destroy Request" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Requested by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Reason:** ${{ github.event.inputs.reason }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY

  plan-destroy:
    name: üìã Plan Destroy
    runs-on: ubuntu-latest
    needs: validate-destroy
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan Destroy
        run: |
          terraform plan -destroy \
            -var="environment=${{ github.event.inputs.environment }}" \
            -var="aws_profile=" \
            -out=destroy-plan

      - name: Upload Destroy Plan
        uses: actions/upload-artifact@v4
        with:
          name: destroy-plan-${{ github.event.inputs.environment }}
          path: destroy-plan
          retention-days: 1

  destroy:
    name: üí• Destroy Infrastructure
    runs-on: ubuntu-latest
    needs: plan-destroy
    environment: ${{ github.event.inputs.environment }}-destroy
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Download Destroy Plan
        uses: actions/download-artifact@v4
        with:
          name: destroy-plan-${{ github.event.inputs.environment }}

      - name: Terraform Init
        run: terraform init

      - name: Final Confirmation
        run: |
          echo "‚ö†Ô∏è FINAL WARNING: About to destroy infrastructure!"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Reason: ${{ github.event.inputs.reason }}"
          echo "Proceeding in 10 seconds..."
          sleep 10

      - name: Terraform Destroy
        run: terraform apply -auto-approve destroy-plan

      - name: Cleanup State (Optional)
        run: |
          echo "üßπ Infrastructure destroyed successfully"
          echo "State file preserved for audit purposes"

      - name: Destroy Summary
        run: |
          echo "## üí• Infrastructure Destroyed" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Destroyed by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Reason:** ${{ github.event.inputs.reason }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "‚ö†Ô∏è **Note:** State file preserved for audit purposes" >> $GITHUB_STEP_SUMMARY

  notify:
    name: üì¢ Notify Team
    runs-on: ubuntu-latest
    needs: destroy
    if: always()
    steps:
      - name: Notify Success
        if: needs.destroy.result == 'success'
        run: |
          echo "‚úÖ Infrastructure destruction completed successfully"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Destroyed by: ${{ github.actor }}"

      - name: Notify Failure
        if: needs.destroy.result == 'failure'
        run: |
          echo "‚ùå Infrastructure destruction failed"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Please check logs and contact infrastructure team"
